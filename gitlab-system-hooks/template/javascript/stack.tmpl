# 创建服务
apiVersion: v1
kind: Service
metadata:
  name: ${CI_ENVIRONMENT_NAME}-${CI_PROJECT_PATH_SLUG}
spec:
  selector:
    app: ${CI_ENVIRONMENT_NAME}-${CI_PROJECT_PATH_SLUG}
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
# 部署服务
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${CI_ENVIRONMENT_NAME}-${CI_PROJECT_PATH_SLUG}
spec:
  selector:
    matchLabels:
      app: ${CI_ENVIRONMENT_NAME}-${CI_PROJECT_PATH_SLUG}
  replicas: 3
  template:
    metadata:
      labels:
        app: ${CI_ENVIRONMENT_NAME}-${CI_PROJECT_PATH_SLUG}
    spec:
      containers:
      - name: nginx
        image: ${DOCER_REJISTRY}/library/${CI_PROJECT_PATH}/nginx:${CI_PIPELINE_ID}
        volumeMounts:
          - name: nginx-config
            mountPath: /etc/nginx/conf.d
        ports:
          - containerPort: 80
        readinessProbe: #kubernetes认为该pod是启动成功的
          httpGet:
            path: /
            port: 80
            scheme: HTTP
          initialDelaySeconds: 3 ## equals to minimum startup time of the application
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 5
