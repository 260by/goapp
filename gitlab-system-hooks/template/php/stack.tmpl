# 创建服务
apiVersion: v1
kind: Service
metadata:
  name: ${CI_ENVIRONMENT_NAME}-${CI_PROJECT_PATH_SLUG}
spec:
  selector:
    app: ${CI_ENVIRONMENT_NAME}-${CI_PROJECT_PATH_SLUG} 
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
# 部署应用
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${CI_ENVIRONMENT_NAME}-${CI_PROJECT_PATH_SLUG} 
spec:
  selector:
    matchLabels:
      app: ${CI_ENVIRONMENT_NAME}-${CI_PROJECT_PATH_SLUG}
  replicas: 3
  template:
    metadata:
      labels:
        app: ${CI_ENVIRONMENT_NAME}-${CI_PROJECT_PATH_SLUG}
    spec:
      containers:
        - name: nginx
          image: ${DOCER_REJISTRY}/library/${CI_PROJECT_PATH}/nginx:${APP_VERSION}
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
        - name: php
          image: ${DOCER_REJISTRY}/library/${CI_PROJECT_PATH}/php:${APP_VERSION}
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: sys-log
              mountPath: /dev/log
          env:
            - name: ENV
              value: ${CI_ENVIRONMENT_NAME}
            - name: SESSION_SAVE_HANDLER
              value: redis
            - name: SESSION_SAVE_PATH
              value: "tcp://192.168.1.83:6379?&auth=XTkj2016&persistent=1"
          ports:
            - containerPort: 9000
          readinessProbe: #kubernetes认为该pod是启动成功的
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            initialDelaySeconds: 3 ## equals to minimum startup time of the application
            timeoutSeconds: 3
            successThreshold: 1
            failureThreshold: 5
      volumes:
        - name: sys-log
          hostPath:
            path: "/dev/log"
